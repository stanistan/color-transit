;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name color-transit.canvas, :imports nil, :requires nil, :uses nil, :defs {ctx {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 19, :column 7, :end-line 19, :end-column 10, :arglists (quote ([canvas f & args])), :doc "Apply f to the context of the canvas, return the canvas.\n   This is useful for chaining ctx methods.\n   (-> canvas\n       (ctx fill-style ...)\n       (ctx fill-rect ...))", :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(canvas f args)], :arglists ([canvas f & args]), :arglists-meta (nil)}}, :name color-transit.canvas/ctx, :variadic true, :file "src/color-transit/canvas.cljs", :end-column 10, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(canvas f args)], :arglists ([canvas f & args]), :arglists-meta (nil)}, :method-params [(canvas f args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 2, :fn-var true, :arglists ([canvas f & args]), :doc "Apply f to the context of the canvas, return the canvas.\n   This is useful for chaining ctx methods.\n   (-> canvas\n       (ctx fill-style ...)\n       (ctx fill-rect ...))"}, el->Canvas {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 6, :column 7, :end-line 6, :end-column 17, :arglists (quote ([el]))}, :name color-transit.canvas/el->Canvas, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 17, :method-params ([el]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 1, :fn-var true, :arglists (quote ([el]))}, id->Canvas {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 10, :column 7, :end-line 10, :end-column 17, :arglists (quote ([id]))}, :name color-transit.canvas/id->Canvas, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 17, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id]))}, create-linear-gradient {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 48, :column 7, :end-line 48, :end-column 29, :arglists (quote ([ctx x0 y0 x1 y1]))}, :name color-transit.canvas/create-linear-gradient, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 29, :method-params ([ctx x0 y0 x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x0 y0 x1 y1]))}, color-stops-for-colors {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 65, :column 7, :end-line 65, :end-column 29, :arglists (quote ([colors])), :doc "Create a list of color stops that are evently\n   distributed for the colors given."}, :name color-transit.canvas/color-stops-for-colors, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 29, :method-params ([colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([colors])), :doc "Create a list of color stops that are evently\n   distributed for the colors given."}, gradient-add-color-stops {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 57, :column 7, :end-line 57, :end-column 31, :arglists (quote ([gradient stops])), :doc "Each stop is a tuple: [stop color]"}, :name color-transit.canvas/gradient-add-color-stops, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 31, :method-params ([gradient stops]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 57, :end-line 57, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gradient stops])), :doc "Each stop is a tuple: [stop color]"}, ->Canvas {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 3, :column 12, :end-line 3, :end-column 18, :internal-ctor true, :factory :positional, :arglists (quote ([el ctx w h]))}, :name color-transit.canvas/->Canvas, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 18, :method-params ([el ctx w h]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :positional, :line 3, :end-line 3, :max-fixed-arity 4, :fn-var true, :arglists (quote ([el ctx w h]))}, gradient-add-color-stop {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 52, :column 7, :end-line 52, :end-column 30, :arglists (quote ([gradient stop color]))}, :name color-transit.canvas/gradient-add-color-stop, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 30, :method-params ([gradient stop color]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 52, :end-line 52, :max-fixed-arity 3, :fn-var true, :arglists (quote ([gradient stop color]))}, gradient-add-colors {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 73, :column 7, :end-line 73, :end-column 26, :arglists (quote ([gradient colors]))}, :name color-transit.canvas/gradient-add-colors, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 26, :method-params ([gradient colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 73, :end-line 73, :max-fixed-arity 2, :fn-var true, :arglists (quote ([gradient colors]))}, Canvas {:num-fields 4, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name color-transit.canvas/Canvas, :file "src/color-transit/canvas.cljs", :end-column 18, :type true, :column 12, :internal-ctor true, :line 3, :record true, :end-line 3, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, draw-rect {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 88, :column 7, :end-line 88, :end-column 16, :arglists (quote ([canvas style & [{:keys [x y], :as opts}]])), :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(canvas style [{:keys [x y], :as opts}])], :arglists ([canvas style & [{:keys [x y], :as opts}]]), :arglists-meta (nil)}}, :name color-transit.canvas/draw-rect, :variadic true, :file "src/color-transit/canvas.cljs", :end-column 16, :top-fn {:variadic true, :max-fixed-arity 2, :method-params [(canvas style [{:keys [x y], :as opts}])], :arglists ([canvas style & [{:keys [x y], :as opts}]]), :arglists-meta (nil)}, :method-params [(canvas style [{:keys [x y], :as opts}])], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 2, :fn-var true, :arglists ([canvas style & [{:keys [x y], :as opts}]])}, linear-gradient-with-colors {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 79, :column 7, :end-line 79, :end-column 34, :arglists (quote ([ctx colors x0 y0 x1 y1]))}, :name color-transit.canvas/linear-gradient-with-colors, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 34, :method-params ([ctx colors x0 y0 x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 6, :fn-var true, :arglists (quote ([ctx colors x0 y0 x1 y1]))}, query->Canvases {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 14, :column 7, :end-line 14, :end-column 22, :arglists (quote ([query]))}, :name color-transit.canvas/query->Canvases, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 22, :method-params ([query]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([query]))}, draw-gradient {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 94, :column 7, :end-line 94, :end-column 20, :arglists (quote ([canvas colors]))}, :name color-transit.canvas/draw-gradient, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 20, :method-params ([canvas colors]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 94, :end-line 94, :max-fixed-arity 2, :fn-var true, :arglists (quote ([canvas colors]))}, map->Canvas {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 3, :column 12, :end-line 3, :end-column 18, :internal-ctor true, :factory :map, :arglists (quote ([G__5936]))}, :name color-transit.canvas/map->Canvas, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 18, :method-params ([G__5936]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :internal-ctor true, :factory :map, :line 3, :end-line 3, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__5936]))}, fill-style {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 34, :column 7, :end-line 34, :end-column 17, :arglists (quote ([ctx style]))}, :name color-transit.canvas/fill-style, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 17, :method-params ([ctx style]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 2, :fn-var true, :arglists (quote ([ctx style]))}, fill-rect {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/canvas.cljs", :line 39, :column 7, :end-line 39, :end-column 16, :arglists (quote ([ctx x0 y0 x1 y1]))}, :name color-transit.canvas/fill-rect, :variadic false, :file "src/color-transit/canvas.cljs", :end-column 16, :method-params ([ctx x0 y0 x1 y1]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 39, :end-line 39, :max-fixed-arity 5, :fn-var true, :arglists (quote ([ctx x0 y0 x1 y1]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:y ctx :el el :w w :h :x :ctx h}, :order [:el :ctx :w :h el ctx w h :x :y]}, :doc nil}