;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name color-transit.core, :imports nil, :requires {color-transit.canvas color-transit.canvas, color-transit.canvas-set color-transit.canvas-set, color color-transit.color, color-transit.color color-transit.color, color-transit.interval color-transit.interval}, :uses {ctx color-transit.canvas, swap-interval! color-transit.interval, query->Canvases color-transit.canvas, colors->CanvasSet color-transit.canvas-set, draw-gradient color-transit.canvas}, :defs {app-state {:name color-transit.core/app-state, :file "src/color-transit/core.cljs", :line 7, :column 1, :end-line 7, :end-column 19, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 7, :column 10, :end-line 7, :end-column 19}}, update-color-sets {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 10, :column 7, :end-line 10, :end-column 24, :arglists (quote ([steps color-sets]))}, :name color-transit.core/update-color-sets, :variadic false, :file "src/color-transit/core.cljs", :end-column 24, :method-params ([steps color-sets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 2, :fn-var true, :arglists (quote ([steps color-sets]))}, update-canvas-sets {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 15, :column 7, :end-line 15, :end-column 25, :arglists (quote ([steps canvas-sets]))}, :name color-transit.core/update-canvas-sets, :variadic false, :file "src/color-transit/core.cljs", :end-column 25, :method-params ([steps canvas-sets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 2, :fn-var true, :arglists (quote ([steps canvas-sets]))}, draw-gradients! {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 21, :column 7, :end-line 21, :end-column 22, :arglists (quote ([canvas-sets]))}, :name color-transit.core/draw-gradients!, :variadic false, :file "src/color-transit/core.cljs", :end-column 22, :method-params ([canvas-sets]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([canvas-sets]))}, run-loop! {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 29, :column 7, :end-line 29, :end-column 16, :arglists (quote ([])), :doc "Executes drawing every whatever time we defined."}, :name color-transit.core/run-loop!, :variadic false, :file "src/color-transit/core.cljs", :end-column 16, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Executes drawing every whatever time we defined."}, start-app! {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 43, :column 7, :end-line 43, :end-column 17, :arglists (quote ([{:keys [canvas-sets fps steps]}]))}, :name color-transit.core/start-app!, :variadic false, :file "src/color-transit/core.cljs", :end-column 17, :method-params ([p__6247]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [canvas-sets fps steps]}]))}, canvas-full-screen {:protocol-inline nil, :meta {:file "/Users/stanistan/dev/color-transit/src/color-transit/core.cljs", :line 49, :column 7, :end-line 49, :end-column 25, :arglists (quote ([canvas]))}, :name color-transit.core/canvas-full-screen, :variadic false, :file "src/color-transit/core.cljs", :end-column 25, :method-params ([canvas]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 49, :end-line 49, :max-fixed-arity 1, :fn-var true, :arglists (quote ([canvas]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:shuffle :el :w :steps :canvas :color-sets :fps :h :current-color :interval :canvas-sets}, :order [:interval :canvas-sets :color-sets :canvas :current-color :steps :fps :el :w :h :shuffle]}, :doc nil}